[package]
name = "radicle-node"
description = "The Radicle Node"
homepage = "https://radicle.xyz"
license = "MIT OR Apache-2.0"
version = "0.11.0"
authors = ["cloudhead <cloudhead@radicle.xyz>"]
edition = "2021"
build = "build.rs"
rust-version.workspace = true

[features]
default = ["systemd"]
systemd = ["dep:radicle-systemd"]
test = ["radicle/test", "radicle-crypto/test", "radicle-crypto/cyphernet", "qcheck", "snapbox"]

[dependencies]
amplify = { workspace = true }
anyhow = { workspace = true }
bloomy = "1.2"
byteorder = { workspace = true }
chrono = { workspace = true, features = ["clock"] }
colored = { workspace = true }
crossbeam-channel = { workspace = true }
cyphernet = { workspace = true, features = ["tor", "dns", "ed25519", "p2p-ed25519"] }
fastrand = { workspace = true }
io-reactor = { version = "0.5.1", features = ["popol"] }
lexopt = { workspace = true }
libc = { workspace = true }
log = { workspace = true, features = ["std"] }
localtime = { workspace = true }
netservices = { version = "0.8.0", features = ["io-reactor", "socket2"] }
nonempty = { workspace = true, features = ["serialize"] }
qcheck = { workspace = true, optional = true }
radicle = { workspace = true, features = ["logger"] }
radicle-fetch = { workspace = true }
# N.b. this is required to use macros, even though it's re-exported
# through radicle
radicle-git-ext = { workspace = true, features = ["serde"] }
radicle-signals = { workspace = true }
radicle-systemd = { workspace = true, optional = true }
sqlite = { workspace = true, features = ["bundled"] }
scrypt = { version = "0.11.0", default-features = false }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true, features = ["preserve_order"] }
snapbox = { workspace = true, optional = true }
socket2 = "0.5.7"
tempfile = { workspace = true }
thiserror = { workspace = true }

[dev-dependencies]
qcheck = { workspace = true }
qcheck-macros = { workspace = true }
radicle = { workspace = true, features = ["test"] }
radicle-crypto = { workspace = true, features = ["test", "cyphernet"] }
snapbox = { workspace = true }